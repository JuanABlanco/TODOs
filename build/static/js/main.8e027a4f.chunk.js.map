{"version":3,"sources":["components/ListaTareas.js","App.js","reportWebVitals.js","index.js"],"names":["ListaTareas","React","useState","añadiendo","setAñadiendo","mensajes","setMensajes","cambiarEstado","mensaje","nuevoValor","nuevosEstados","filter","Objeto","estado","className","Grid","container","spacing","item","xs","Button","onClick","style","color","Input","id","placeholder","margin","type","e","textoMensaje","document","getElementById","horaMensaje","value","tareaNueva","hora","length","agregarTarea","map","objetos","idx","marginLeft","marginRight","fontColor","SnackbarContent","message","action","readOnly","size","backgroundColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4OA6GeA,G,MApGK,WAAO,IAAD,EACWC,IAAMC,UAAS,GAD1B,mBACfC,EADe,KACLC,EADK,OAEUH,IAAMC,SAAS,IAFzB,mBAEfG,EAFe,KAELC,EAFK,KAchBC,EAAgB,SAACC,EAASC,GAC5B,IAAIC,EAAgBL,EAASM,QAAO,SAAAC,GAI5B,OAHGA,EAAOJ,UAAYA,EAAQA,UAC1BI,EAAOC,OAASJ,GAEbG,KAGfN,EAAYI,IAGhB,OACI,qBAAKI,UAAU,QAAf,SACA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAS,WAAOjB,GAAa,IAASkB,MAAO,CAACC,MAAO,yBAA7D,yBAGApB,GACA,eAACY,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACI,cAACK,EAAA,EAAD,CAAOC,GAAG,UAAUC,YAAY,QAAQJ,MAAO,CAACC,MAAO,QAASI,OAAQ,SACxE,cAACH,EAAA,EAAD,CAAOC,GAAG,OAAOG,KAAK,OAAON,MAAO,CAACC,MAAO,QAASI,OAAQ,SAC7D,cAACP,EAAA,EAAD,CAAQE,MAAO,CAACC,MAAO,yBAA0BF,QAAS,SAACQ,IAhCtD,WACjB,IAAMC,EAAeC,SAASC,eAAe,WACvCC,EAAcF,SAASC,eAAe,QAC5C,GAAGF,EAAaI,OAAgC,KAAvBJ,EAAaI,MAAa,CAC/C,IAAMC,EAAaF,EAAYC,MAAQ,CAAC1B,QAASsB,EAAaI,MAAOrB,OAAQ,EAAGuB,KAAMH,EAAYC,OAAS,CAAC1B,QAASsB,EAAaI,MAAOrB,OAAQ,GACjJR,EAASA,EAASgC,QAAUF,GA2B8CG,GAAgBlC,GAAa,IAA/F,qBACA,cAACgB,EAAA,EAAD,CAAQG,MAAM,YAAYF,QAAS,WAAOjB,GAAa,IAAvD,yBAIJC,EAASkC,KAAI,SAACC,EAAQC,GAAT,OACU,IAAnBD,EAAQ3B,QACR,cAACE,EAAA,EAAD,CAAgBG,MAAI,EAACC,GAAI,GAAIG,MAAO,CAACoB,WAAY,OAAQC,YAAa,OAAQC,UAAW,SAAzF,SACI,cAACC,EAAA,EAAD,CAAiBC,QAASN,EAAQhC,QAASuC,OACvC,qCAEQP,EAAQJ,MACR,cAACZ,EAAA,EAAD,CAAOI,KAAK,OAAON,MAAO,CAACC,MAAO,SAAUW,MAAOM,EAAQJ,KAAMY,UAAQ,IAE7E,cAAC5B,EAAA,EAAD,CAAQ6B,KAAK,QAAQ3B,MAAO,CAACC,MAAO,yBAA0BF,QAAS,WAAOd,EAAciC,EAAQ,IAApG,mBAGA,cAACpB,EAAA,EAAD,CAAQ6B,KAAK,QAAQ3B,MAAO,CAACC,MAAO,OAAQF,QAAS,WAAOd,EAAciC,EAAQ,IAAlF,yBAMRlB,MAAO,CAAE4B,gBAAgB,6BAhBlBT,MAoBnB,uBACA,cAAC1B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIG,MAAO,CAACoB,WAAY,OAAQC,YAAa,QAA5D,SACI,cAACE,EAAA,EAAD,CAAiBC,QAAS,cAC1BxB,MAAQ,CAAE4B,gBAAgB,0BAG1B7C,EAASkC,KAAI,SAACC,EAAQC,GAAT,OACU,IAAnBD,EAAQ3B,QAER,cAACE,EAAA,EAAD,CAAgBG,MAAI,EAACC,GAAI,GAAIG,MAAO,CAACoB,WAAY,OAAQC,YAAa,OAAQC,UAAW,SAAzF,SACI,cAACC,EAAA,EAAD,CAAiBC,QAASN,EAAQhC,QAClCc,MAAQ,CAAE4B,gBAAgB,8BAFnBT,MAOnB,uBACA,cAAC1B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIG,MAAO,CAACoB,WAAY,OAAQC,YAAa,QAA5D,SACI,cAACE,EAAA,EAAD,CAAiBC,QAAS,aAC1BxB,MAAQ,CAAE4B,gBAAgB,0BAG1B7C,EAASkC,KAAI,SAACC,EAASC,GAAV,OACU,IAAnBD,EAAQ3B,QAER,cAACE,EAAA,EAAD,CAAgBG,MAAI,EAACC,GAAI,GAAIG,MAAO,CAACoB,WAAY,OAAQC,YAAa,OAAQC,UAAW,SAAzF,SACI,cAACC,EAAA,EAAD,CAAiBC,QAASN,EAAQhC,QAClCc,MAAQ,CAAE4B,gBAAgB,6BAFnBT,aClFhBU,MAZf,WACE,OACE,qBAAKrC,UAAU,MAAf,SACE,qBAAKA,UAAU,aAAf,SAEE,cAAC,EAAD,SCIOsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASC,eAAe,SAM1BoB,M","file":"static/js/main.8e027a4f.chunk.js","sourcesContent":["import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n//import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Input from '@material-ui/core/Input';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport '../App.css';\r\n\r\n\r\nconst ListaTareas = () => {\r\n    const [añadiendo,setAñadiendo] = React.useState(false)\r\n    const [mensajes, setMensajes] = React.useState([]) \r\n\r\n    const agregarTarea = () => {\r\n        const textoMensaje = document.getElementById('mensaje');\r\n        const horaMensaje = document.getElementById('hora');\r\n        if(textoMensaje.value && textoMensaje.value !== ''){\r\n            const tareaNueva = horaMensaje.value ? {mensaje: textoMensaje.value, estado: 0, hora: horaMensaje.value} : {mensaje: textoMensaje.value, estado: 0}\r\n            mensajes[mensajes.length] = tareaNueva\r\n        }   \r\n            \r\n    }\r\n\r\n    const cambiarEstado = (mensaje, nuevoValor) => {\r\n        var nuevosEstados = mensajes.filter(Objeto => { \r\n                if(Objeto.mensaje === mensaje.mensaje){\r\n                    Objeto.estado = nuevoValor\r\n                }\r\n                return Objeto\r\n            }\r\n        )\r\n        setMensajes(nuevosEstados)\r\n    }\r\n\r\n    return (\r\n        <div className='Glass'>\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Button onClick={() =>{ setAñadiendo(true)}}  style={{color: 'rgba(19, 202, 145, 1)'}} >Añadir</Button>\r\n            </Grid>\r\n            { \r\n                añadiendo &&\r\n                <Grid item xs={12}>\r\n                    <Input id='mensaje' placeholder='Tarea' style={{color: 'white', margin: '1vw'}}/>\r\n                    <Input id='hora' type='time' style={{color: 'white', margin: '1vw'}}/>\r\n                    <Button style={{color: 'rgba(19, 202, 145, 1)'}} onClick={(e) =>{ agregarTarea(); setAñadiendo(false)}}>Aceptar</Button>\r\n                    <Button color=\"secondary\" onClick={() =>{ setAñadiendo(false)}}>Cancelar</Button>\r\n                </Grid>\r\n            }\r\n            {\r\n                mensajes.map((objetos,idx) => ( \r\n                    objetos.estado === 0 &&\r\n                    <Grid key={idx} item xs={12} style={{marginLeft: '20vw', marginRight: '20vw', fontColor: 'black'}}>\r\n                        <SnackbarContent message={objetos.mensaje} action={\r\n                            <>\r\n                                {   \r\n                                    objetos.hora &&\r\n                                    <Input type='time' style={{color: 'white'}} value={objetos.hora} readOnly></Input>\r\n                                }\r\n                                <Button size=\"small\" style={{color: 'rgba(19, 202, 145, 1)'}} onClick={() => {cambiarEstado(objetos,1)}}>\r\n                                    Listo\r\n                                </Button>\r\n                                <Button size=\"small\" style={{color: 'red'}} onClick={() => {cambiarEstado(objetos,2)}}>\r\n                                    Cancelar\r\n                                </Button>\r\n                            \r\n                            </>\r\n                        }\r\n                        style={{ backgroundColor: `rgba(59, 85, 206, 0.9)` }}/>\r\n                    </Grid>\r\n                ))\r\n            }\r\n            <br/>\r\n            <Grid item xs={12} style={{marginLeft: '10vw', marginRight: '45vw'}}>\r\n                <SnackbarContent message={'Completadas'} \r\n                style={ { backgroundColor: `rgba(0, 0, 0, 0.9)` } }/>\r\n            </Grid>\r\n            {\r\n                mensajes.map((objetos,idx) => ( \r\n                    objetos.estado === 1 &&\r\n                    \r\n                    <Grid key={idx} item xs={12} style={{marginLeft: '20vw', marginRight: '20vw', fontColor: 'white'}}>\r\n                        <SnackbarContent message={objetos.mensaje} \r\n                        style={ { backgroundColor: `rgba(19, 202, 145, 0.9)` } }/>\r\n                    </Grid>\r\n                    \r\n                ))\r\n            }\r\n            <br/>\r\n            <Grid item xs={12} style={{marginLeft: '10vw', marginRight: '45vw'}}>\r\n                <SnackbarContent message={'Canceladas'} \r\n                style={ { backgroundColor: `rgba(0, 0, 0, 0.9)` } }/>\r\n            </Grid>\r\n            {\r\n                mensajes.map((objetos, idx) => ( \r\n                    objetos.estado === 2 &&\r\n                    \r\n                    <Grid key={idx} item xs={12} style={{marginLeft: '20vw', marginRight: '20vw', fontColor: 'white'}}>\r\n                        <SnackbarContent message={objetos.mensaje} \r\n                        style={ { backgroundColor: `rgba(230, 60, 60, 0.9)` } }/>\r\n                    </Grid>\r\n                    \r\n                ))\r\n            }\r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListaTareas","import ListaTareas from './components/ListaTareas'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        \n        <ListaTareas/> \n      \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}